# Generated by Django 4.2.5 on 2023-12-05 02:17

from django.db import migrations, models
import django.db.models.deletion
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('week', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('paper_size', models.CharField(choices=[('LETTER', 'Letter')], default='Letter', max_length=15)),
                ('top_margin', models.FloatField()),
                ('left_margin', models.FloatField()),
                ('label_width', models.FloatField()),
                ('label_height', models.FloatField()),
                ('columns', models.PositiveIntegerField()),
                ('rows', models.PositiveIntegerField()),
                ('row_margin', models.FloatField()),
                ('col_margin', models.FloatField()),
                ('top_padding', models.FloatField()),
                ('left_padding', models.FloatField()),
                ('max_chars', models.PositiveIntegerField(default=25)),
                ('font_size', models.FloatField(default=7)),
                ('qr_size', models.FloatField(default=12)),
                ('line_spacing', models.FloatField(default=2.3)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', phone_field.models.PhoneField(blank=True, max_length=31, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('consent_status', models.CharField(choices=[('Consented', 'Consented'), ('Not Consented', 'Not Consented'), ('Withdrawn', 'Withdrawn'), ('Inactive', 'Inactive')], default='Consented', max_length=15)),
                ('consent_date', models.DateField(blank=True, null=True)),
                ('withdrawn_date', models.DateField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', phone_field.models.PhoneField(blank=True, max_length=31, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=6, unique=True)),
                ('collection_status', models.CharField(choices=[('Collected', 'Collected'), ('Absent', 'Absent'), ('Refused', 'Refused'), ('Pending', 'Pending'), ('Withdrew', 'Withdrew')], default='Pending', max_length=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('box_position', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('subject', 'collection_event', 'location', 'sample_type'),
            },
        ),
        migrations.CreateModel(
            name='SampleBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_name', models.CharField(max_length=100, unique=True)),
                ('size', models.PositiveIntegerField(default=100)),
                ('storage_location', models.CharField(blank=True, max_length=100, null=True)),
                ('storage_shelf', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'sample_boxes',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('protocol', models.TextField(blank=True, null=True)),
                ('detects', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Sequencing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('run_id', models.CharField(blank=True, max_length=100, null=True)),
                ('protocol', models.TextField(blank=True, null=True)),
                ('targets', models.CharField(blank=True, max_length=100, null=True)),
                ('prep_url', models.TextField(blank=True, null=True)),
                ('seq_loc', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('researcher', models.ManyToManyField(blank=True, to='lims.researcher')),
                ('samples', models.ManyToManyField(blank=True, to='lims.sample')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='SampleResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('replicate', models.PositiveIntegerField(default=1)),
                ('result', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Pending', 'Pending'), ('Unknown', 'Unknown'), ('Inconclusive', 'Inconclusive')], default='Pending', max_length=15)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('researcher', models.ManyToManyField(blank=True, to='lims.researcher')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.sample')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.test')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='box',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lims.samplebox'),
        ),
        migrations.AddField(
            model_name='sample',
            name='collection_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.event'),
        ),
        migrations.AddField(
            model_name='sample',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lims.location'),
        ),
        migrations.AddField(
            model_name='sample',
            name='sample_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.sampletype'),
        ),
        migrations.AddField(
            model_name='sample',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.species'),
        ),
        migrations.AddField(
            model_name='location',
            name='neigborhood',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lims.neighborhood'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.location'),
        ),
        migrations.AddField(
            model_name='event',
            name='researcher',
            field=models.ManyToManyField(blank=True, to='lims.researcher'),
        ),
        migrations.AddConstraint(
            model_name='sampleresult',
            constraint=models.UniqueConstraint(fields=('sample', 'test', 'replicate'), name='unique_sample_result'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.UniqueConstraint(fields=('box', 'box_position'), name='unique_box_position'),
        ),
    ]
