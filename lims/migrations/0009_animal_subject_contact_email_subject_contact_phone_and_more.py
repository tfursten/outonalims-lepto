# Generated by Django 4.2.5 on 2024-01-26 23:09

from django.db import migrations, models
import django.db.models.deletion
import phone_field.models


class Migration(migrations.Migration):

    dependencies = [
        ('lims', '0008_alter_sample_name_alter_sample_subject'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='subject',
            name='contact_phone',
            field=phone_field.models.PhoneField(blank=True, max_length=31, null=True),
        ),
        migrations.AlterField(
            model_name='label',
            name='paper_size',
            field=models.CharField(choices=[('LETTER', 'Letter'), ('A4', 'A4')], default='Letter', max_length=15),
        ),
        migrations.AlterField(
            model_name='sample',
            name='collection_status',
            field=models.CharField(choices=[('Collected', 'Collected'), ('Not Collected', 'Not Collected'), ('Pending', 'Pending'), ('Refused', 'Refused')], default='Pending', max_length=15),
        ),
        migrations.AlterField(
            model_name='sample',
            name='sample_type',
            field=models.CharField(blank=True, choices=[('Urine', 'Urine'), ('Water', 'Water'), ('Soil', 'Soil'), ('Trap', 'Trap'), ('Carcass', 'Carcass')], max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='sample',
            name='source',
            field=models.CharField(blank=True, choices=[('Human', 'Human'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Rat', 'Rat'), ('Mouse', 'Mouse'), ('Horse', 'Horse'), ('Cow', 'Cow'), ('Donkey', 'Donkey'), ('Pig', 'Pig'), ('Environment', 'Environment')], max_length=15, null=True),
        ),
        migrations.CreateModel(
            name='ResidentSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years_of_residency', models.PositiveIntegerField(blank=True, null=True)),
                ('months_of_residency', models.PositiveIntegerField(blank=True, null=True)),
                ('visited_water_source', models.BooleanField(blank=True, null=True)),
                ('contact_with_water_source', models.BooleanField(blank=True, null=True)),
                ('name_of_visited_water_source', models.CharField(blank=True, max_length=128, null=True)),
                ('location_of_visited_water_source', models.CharField(blank=True, max_length=128, null=True)),
                ('visited_water_source_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('barefoot_near_water_source', models.BooleanField(blank=True, null=True)),
                ('animals_near_water_source', models.BooleanField(blank=True, null=True)),
                ('rats_near_house', models.BooleanField(blank=True, null=True)),
                ('rats_near_house_day', models.BooleanField(blank=True, null=True)),
                ('rats_near_house_night', models.BooleanField(blank=True, null=True)),
                ('rat_frequency', models.CharField(blank=True, choices=[('None', 'None'), ('1-2 days per week', '1-2 days per week'), ('3-4 days per week', '3-4 days per week'), ('5-6 days per week', '5-6 days per week'), ('Every day per week', 'Every day per week'), ('Occasionally', 'Occasionally')], max_length=32, null=True)),
                ('rats_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('animal_contact', models.BooleanField(blank=True, null=True)),
                ('animal_contact_frequency', models.CharField(blank=True, max_length=128, null=True)),
                ('barefood_around_house', models.CharField(blank=True, choices=[('Always', 'Always'), ('Most of the time', 'Most of the time'), ('Some of the time', 'Some of the time'), ('Never', 'Never')], max_length=32, null=True)),
                ('boil_water', models.CharField(blank=True, choices=[('Always', 'Always'), ('Most of the time', 'Most of the time'), ('Some of the time', 'Some of the time'), ('Never', 'Never')], max_length=32, null=True)),
                ('animal_contact_type', models.ManyToManyField(blank=True, related_name='+', to='lims.animal')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.event')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.subject')),
                ('type_of_animal_near_water_source', models.ManyToManyField(blank=True, related_name='+', to='lims.animal')),
            ],
        ),
        migrations.CreateModel(
            name='HouseSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_of_dwelling', models.BooleanField(blank=True, null=True)),
                ('number_or_residents', models.PositiveIntegerField(blank=True, null=True)),
                ('type_of_housing', models.CharField(blank=True, choices=[('Cane', 'Cane'), ('Palm', 'Palm'), ('Adobe', 'Adobe'), ('Cement', 'Cement'), ('Block', 'Block'), ('Wood', 'Wood'), ('Mixed', 'Mixed'), ('Other', 'Other')], max_length=16, null=True)),
                ('housing_condition_note', models.CharField(blank=True, max_length=128, null=True)),
                ('animals_in_backyard', models.BooleanField(blank=True, null=True)),
                ('dry_food_stored_near_home', models.BooleanField(blank=True, null=True)),
                ('type_of_dry_food_stored_near_home', models.CharField(blank=True, max_length=32, null=True)),
                ('drinking_water_source', models.CharField(blank=True, choices=[('Public Network', 'Public Network'), ('Delivery Truck', 'Delivery Truck'), ('River/Stream', 'River/Stream'), ('Ditch', 'Ditch'), ('Canal', 'Canal'), ('Albarrada', 'Albarrada'), ('Embankment', 'Embankment'), ('Other', 'Other')], max_length=32, null=True)),
                ('drinking_water_source_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('washing_water_source', models.CharField(blank=True, choices=[('Public Network', 'Public Network'), ('Delivery Truck', 'Delivery Truck'), ('River/Stream', 'River/Stream'), ('Ditch', 'Ditch'), ('Canal', 'Canal'), ('Albarrada', 'Albarrada'), ('Embankment', 'Embankment'), ('Other', 'Other')], max_length=32, null=True)),
                ('washing_water_source_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('waste_management', models.CharField(blank=True, choices=[('No Toilet', 'No Toilet'), ('Cesspool', 'Cesspool'), ('Public Sewage System', 'Public Sewage System'), ('Discharge to River/Stream', 'Discharge to River/Stream'), ('Septic Tank', 'Septic Tank'), ('Latrine', 'Latrin'), ('Outhouse', 'Outhouse')], max_length=32, null=True)),
                ('waste_management_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('flooding', models.BooleanField(blank=True, null=True)),
                ('flooding_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('animal_types', models.ManyToManyField(blank=True, to='lims.animal')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.event')),
            ],
        ),
        migrations.CreateModel(
            name='AnimalSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_animals', models.PositiveIntegerField(blank=True, null=True)),
                ('number_sampled', models.PositiveIntegerField(blank=True, null=True)),
                ('feed_type', models.CharField(blank=True, max_length=64, null=True)),
                ('product', models.CharField(blank=True, choices=[('Meat', 'Meat'), ('Offspring', 'Offspring'), ('Milk', 'Milk'), ('Eggs', 'Eggs'), ('Other', 'Other')], max_length=32, null=True)),
                ('number_died', models.PositiveIntegerField(blank=True, null=True)),
                ('cause_of_death', models.CharField(blank=True, choices=[('Meat', 'Meat'), ('Offspring', 'Offspring'), ('Milk', 'Milk'), ('Eggs', 'Eggs'), ('Other', 'Other')], max_length=128, null=True)),
                ('disposal', models.CharField(blank=True, choices=[('Food', 'Food'), ('Buried', 'Buried'), ('Sold', 'Sold'), ('River', 'River'), ('Other', 'Other')], max_length=16, null=True)),
                ('number_sacrificed', models.PositiveIntegerField(blank=True, null=True)),
                ('where_sacrificed', models.CharField(blank=True, choices=[('House', 'House'), ('Municipal Slaughterhouse', 'Municipal Slaughterhouse'), ('Clandestine Slaughterhouse', 'Clandestine Slaughterhouse'), ('Other', 'Other')], max_length=64, null=True)),
                ('sacrifice_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('slaughter_frequency', models.CharField(blank=True, max_length=64, null=True)),
                ('meat_destination', models.CharField(blank=True, choices=[('Self-consumption', 'Self-consumption'), ('Sold', 'Sold'), ('Combination', 'Combination')], max_length=32, null=True)),
                ('sold_standing', models.BooleanField(blank=True, null=True)),
                ('vet_care', models.BooleanField(blank=True, null=True)),
                ('vet_care_frequency', models.CharField(blank=True, max_length=32, null=True)),
                ('vet_care_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('drinking_water_source', models.CharField(blank=True, choices=[('Public Network', 'Public Network'), ('Delivery Truck', 'Delivery Truck'), ('River/Stream', 'River/Stream'), ('Ditch', 'Ditch'), ('Canal', 'Canal'), ('Albarrada', 'Albarrada'), ('Embankment', 'Embankment'), ('Other', 'Other')], max_length=32, null=True)),
                ('drinking_water_source_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('cleaning_water_source', models.CharField(blank=True, choices=[('Public Network', 'Public Network'), ('Delivery Truck', 'Delivery Truck'), ('River/Stream', 'River/Stream'), ('Ditch', 'Ditch'), ('Canal', 'Canal'), ('Albarrada', 'Albarrada'), ('Embankment', 'Embankment'), ('Other', 'Other')], max_length=32, null=True)),
                ('cleaning_water_source_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.animal')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.event')),
            ],
        ),
    ]
